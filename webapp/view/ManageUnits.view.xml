<mvc:View controllerName="refx.leaseuix.controller.ManageUnits" xmlns="sap.m" xmlns:mvc="sap.ui.core.mvc" xmlns:f="sap.f"
	xmlns:grid="sap.ui.layout.cssgrid" xmlns:core="sap.ui.core" xmlns:l="sap.ui.layout"
	xmlns:tnt="sap.tnt" xmlns:dnd="sap.ui.core.dnd"
	xmlns:dnd-grid="sap.f.dnd" class="customCSS">
	<Page showNavButton="true" navButtonPress="onGoBack">
	<Panel headerText="Units Management" class="padding5" expandable="true">
		<l:VerticalLayout width="100%" class="">
			<l:Grid containerQuery="true" hSpacing="1" vSpacing="0">
				<VBox>
					<Label text="{i18n>RentalUnit}" labelFor="rentalUnits"/>
					<MultiInput id="rentalUnits" valueHelpRequest=".onValueHelpRequested" valueHelpOnly="true" tokenUpdate=".onTokenUpdate"></MultiInput>
					<layoutData>
						<l:GridData span="L4 M4 S12" linebreakL="true" linebreakM="true" linebreakS="true"/>
					</layoutData>
					<HBox justifyContent="SpaceBetween">
						<VBox>
							<HBox>
								<Label text="Selected Unit(s):"></Label>
								<Label text="{viewData>/UnitsName}" wrapping="true" design="Bold" class="sapUiTinyMarginBegin"></Label>
							</HBox>
							<HBox justifyContent="Start" alignItems="Center">
								<Label labelFor="rbg4" text="{i18n>Show}:" class="sapUiSmallMarginEnd"/>
								<RadioButtonGroup id="RBGroup1" columns="3" valueState="Success" select="onShowSelect" selectedIndex="{viewData>/ShowIdx}">
									<RadioButton text="All Units"/>
									<RadioButton text="Vacant"/>
									<RadioButton text="Occupied"/>
								</RadioButtonGroup>
							</HBox>
						</VBox>
						<!--<Button text="Clear" press=".onClearTokens"></Button>-->
						<layoutData>
							<l:GridData span="L4 M4 S12" linebreakL="true" linebreakM="true" linebreakS="true"/>
						</layoutData>
					</HBox>
				</VBox>
				<VBox>
					<HBox>
						<VBox class="sapUiSmallMarginEnd">
							<Label text="{i18n>Floor} :" labelFor="Floor"/>
							<ComboBox id="Floor" width="8rem" items="{ path: '/RentalUnitFloorSet' }" selectedKey="{viewData>/Floor}" change="onFloorChange">
								<core:ListItem key="{Floor}" text="{Floor}"/>
							</ComboBox>
						</VBox>
						<VBox>
							<Label text="{i18n>KeyDate} :"/>
							<DatePicker placeholder="Key Date" value="{path: 'viewData>/KeyDate', type:'sap.ui.model.type.Date' }" change="onKeyDateChange"
								class="sapUiSmallMarginEnd" width="90%"/>
						</VBox>
					</HBox>
					<Label text="{i18n>Vacant} {i18n>On}"/>
					<HBox justifyContent="Start" alignItems="Start">
						<VBox>
							<HBox>
								<StepInput value="{viewData>/Filter/AvailNo/value}" min="{viewData>/Filter/AvailNo/min}" max="{viewData>/Filter/AvailNo/max}" width="8rem"
									step="1" change="onStepChange"/>
								<ComboBox width="8rem" selectedKey="{viewData>/Filter/AvailUnit}" change="onStepChange">
									<core:Item key="0" text="Weeks"/>
									<core:Item key="1" text="Months"/>
									<core:Item key="2" text="Years"/>
								</ComboBox>
							</HBox>
						</VBox>
						<!--<Button text="{i18n>Reset}" press="onResetAvail" class="sapUiTinyMarginBegin"/>-->
					</HBox>
				</VBox>
				<VBox>
					<HBox justifyContent="End" alignItems="Start">
						<VBox class="sapUiTinyMarginTop" alignItems="End">
							<Label text="Occupied: {path : 'viewData>/Tenancy/TOccupiedSize', formatter: '.formatter.NumberFormat'}" class="lightBlue"></Label>
							<Label text="Area : {viewData>/Tenancy/POccupiedSize} %" class="green"></Label>
							<Label text="Vacant: {path : 'viewData>/Tenancy/TVacantSize', formatter: '.formatter.NumberFormat'}"></Label>
						</VBox>
						<Label id="TotalSize" text="{path : 'viewData>/Tenancy/TSize', formatter: '.formatter.NumberFormat'}"
							class="fontSize4 green sapUiTinyMarginBeginEnd"></Label>
						<Label id="SizeUnit" text="{viewData>/Tenancy/SizeUnit}" class="fontSize2 gold"></Label>
					</HBox>
					<HBox justifyContent="End" alignItems="Start">
						<ProgressIndicator class="sapUiTinyMarginTop" percentValue="{viewData>/Tenancy/POccupiedUnits}"
							displayValue="{viewData>/Tenancy/POccupiedUnits} %" showValue="true" state="Information"/>
						<Label id="TotalUnits" text="{viewData>/Tenancy/TUnits}" class="fontSize2_5 grey sapUiTinyMarginBeginEnd"></Label>
						<Label text="Unit(s)" design="Bold" class="gold"></Label>
					</HBox>
					<layoutData>
						<l:GridData span="L5 M4 S12" linebreakL="false" linebreakM="false" linebreakS="false"/>
					</layoutData>
				</VBox>
				<Toolbar style="Clear" class="sapUiNoMarginBottom">
					<Label text="United Investment / Tower B" class="fontSize1_5"/>
					<Button icon="sap-icon://add" type="Transparent" press="onAddUnit"/>
					<ToolbarSpacer/>
					<Text text="(Filtered)" visible="{viewData>/IsFiltered}"/>
					<Button text="{i18n>Reset}" press="onReset" type="Transparent" class="sapUiTinyMarginBegin"/>
					<Button text="Select" type="Transparent" press="onGridSelect"/>
					<Button text="{i18n>Create} {i18n>Contract}" press="onCreateContract" visible="{viewData>/IsMultiSelect}" type="Transparent"
						class="sapUiTinyMarginBegin"/>
					<Button text="{i18n>MergeUnits}" press="onMergeUnits" visible="{viewData>/IsAllowMerge}" type="Transparent" class="sapUiTinyMarginBegin"/>
					<Button icon="sap-icon://grid" type="Transparent" press="onGridViewSetting"/>
					<layoutData>
						<l:GridData span="L12 M12 S12" linebreakL="false" linebreakM="false" linebreakS="false"/>
					</layoutData>
				</Toolbar>
			</l:Grid>
		</l:VerticalLayout>
	</Panel>
		<!--<f:GridList id="unitGrid" mode="None" items="{ path: '/RentalUnitSet', parameters : { 'expand' : 'Contract', custom: { } }  }" selectionChange="onSelectionChange" delete="onDelete"-->
		<f:GridList id="unitGrid"
			items="{ path: '/RentalUnitSet', sorter: { path: 'Floor', descending: false, group: true }, parameters: { expand: 'OccupancySet',custom: { } } }"
			selectionChange="onGridSelectChange" growingThreshold="50" growing="true" class="sapUiResponsiveContentPadding customCSS">
			<f:customLayout>
				<grid:GridBoxLayout boxWidth="15rem"/>
			</f:customLayout>
			<f:dragDropConfig>
				<dnd:DragInfo sourceAggregation="items"/>
				<!--<dnd-grid:GridDropInfo targetAggregation="items" dropPosition="Between" dropLayout="Horizontal" drop="onDrop"/>-->
				<dnd-grid:GridDropInfo targetAggregation="items" drop="onDrop"/>
			</f:dragDropConfig>
			<f:GridListItem detailPress="onDetailPress" highlight="{= ${Available} ? 'Success' : 'Error' }" type="{type}">
				<VBox height="100%" justifyContent="SpaceBetween">
					<layoutData>
						<FlexItemData growFactor="1" shrinkFactor="0"/><!-- Don't shrink below minimum size. Fill space if available. --></layoutData>
					<VBox class="sapUiSmallMargin">
						<HBox justifyContent="SpaceBetween">
							<core:Icon src="{= ${UsageType} === '0001' ? 'sap-icon://building': 'sap-icon://retail-store'}" size="2rem" color="Default"
								class="sapUiTinyMarginBottom"/>
							<HBox justifyContent="End">
								<Text text="{ path: 'UnitSize', formatter: '.formatter.NumberFormat' }" class="fontSize1_5 green"></Text>
								<Text text="{SizeUnit}" class="sapUiTinyMarginBegin gold"></Text>
							</HBox>
						</HBox>
						<HBox justifyContent="SpaceBetween">
							<VBox>
								<Title text="{UnitText}" wrapping="true"/>
								
								<VBox items="{OccupancySet}">
									<Link text="{ContractNo}" press=".onContractDetail">
										<customData>
											<core:CustomData key="REContractKey" value="{REContractKey}"/>
										</customData>
									</Link>
								</VBox> 	
							
							</VBox>
							<tnt:InfoLabel text="Occupied" colorScheme="5" class="" visible="{= ! ${Available} }"/>
						</HBox>
					</VBox>
				</VBox>
			</f:GridListItem>
		</f:GridList>
	
	</Page>
</mvc:View>